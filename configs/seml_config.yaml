seml:
  executable: uncertainty_est/train.py
  name: mcmc_density_estimation_swiss_roll
  output_dir: slurm
  project_root_dir: ..

slurm:
  experiments_per_job: 6
  sbatch_options:
    gres: gpu:1       # num GPUs
    mem: 8G          # memory
    cpus-per-task: 4  # num cores
    time: 0-08:00     # max time, D-HH:MM

###### BEGIN PARAMETER CONFIGURATION ######

fixed:
  trainer_config:
    max_steps: 100_000
    gpus: 1
    max_epochs: 100_000

  checkpoint_config:
    monitor:

  earlystop_config:

  log_dir: grid_search/mcmc_density_estimation_swiss_roll
  dataset: SwissRoll
  # Use second dataset
  ood_dataset: SwissRoll
  seed: 1
  batch_size: 512
  data_shape: [3]
  num_workers: 1

  model_name: JEM
  model_config:
    arch_name: fc
    arch_config:
      inp_dim: 3
      num_classes: 1
      hidden_dims: [100, 100]
      batch_norm: False
      bias: True
      slope: 0.2

    # learning_rate: 0.005
    momentum: 0.9
    weight_decay: 0.0
    smoothing: 0.0
    # sgld_lr: 1.0
    # sgld_std: 0.01
    # sgld_steps: 200
    pyxce: 0.0
    pxsgld: 1.0
    pxysgld: 0.0
    buffer_size: 9999
    reinit_freq: 0.05
    data_shape: [3]
    uncond: True
    sgld_batch_size: 512
    class_cond_p_x_sample: False
    n_classes: 1
    warmup_steps: 2500
    energy_reg_weight: 0.0
    energy_reg_type: 2
    entropy_reg_weight: 0.0
    vis_every: -1
    is_toy_dataset: True
    lr_step_size: 1000

grid:
  model_config:
    type: parameter_collection
    params:
      learning_rate:
        type: loguniform
        min: 1e-5
        max: 1e-3
        num: 3
      sgld_lr:
        type: loguniform
        min: 1e-2
        max: 1
        num: 3
      sgld_std:
        type: loguniform
        min: 1e-2
        max: 1e-1
        num: 2
      sgld_steps:
        type: choice
        options:
          - 20
          - 50
          - 100
